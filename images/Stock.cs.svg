<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">
<svg width="1038.57" height="1067.43" xmlns="http://www.w3.org/2000/svg">
<rect width="938.57" height="1027.43" fill="#282828" x="40.00px" y="20.00px"/>
<g font-family="Jetbrains Mono" font-size="12.00px" fill="#ebdbb2" clip-path="url(#terminalMask)">
<text x="60.00px" y="54.40px" xml:space="preserve">﻿<tspan fill="#fe8019">using</tspan> View;
</text><text x="60.00px" y="68.80px" xml:space="preserve">
</text><text x="60.00px" y="83.20px" xml:space="preserve"><tspan fill="#fe8019">namespace</tspan> Model;
</text><text x="60.00px" y="97.60px" xml:space="preserve">
</text><text x="60.00px" y="112.00px" xml:space="preserve"><tspan fill="#fe8019">public</tspan> <tspan fill="#fe8019">record</tspan> Stock : IDatabaseModel {
</text><text x="60.00px" y="126.40px" xml:space="preserve"><tspan fill="#b8bb26" font-weight="bold">    [PrimaryKey]</tspan>
</text><text x="60.00px" y="140.80px" xml:space="preserve">    <tspan fill="#fe8019">public</tspan> <tspan fill="#fabd2f">int</tspan> Id { <tspan fill="#fe8019">get</tspan>; <tspan fill="#fe8019">set</tspan>; }
</text><text x="60.00px" y="155.20px" xml:space="preserve">    <tspan fill="#fe8019">public</tspan> <tspan fill="#fabd2f">string</tspan> Name { <tspan fill="#fe8019">get</tspan>; <tspan fill="#fe8019">set</tspan>; } = String.Empty;
</text><text x="60.00px" y="169.60px" xml:space="preserve">    <tspan fill="#fe8019">public</tspan> <tspan fill="#fabd2f">string</tspan> Description { <tspan fill="#fe8019">get</tspan>; <tspan fill="#fe8019">set</tspan>; } = String.Empty;
</text><text x="60.00px" y="184.00px" xml:space="preserve">    <tspan fill="#fe8019">public</tspan> <tspan fill="#fabd2f">int</tspan> Amount { <tspan fill="#fe8019">get</tspan>; <tspan fill="#fe8019">set</tspan>; }
</text><text x="60.00px" y="198.40px" xml:space="preserve">
</text><text x="60.00px" y="212.80px" xml:space="preserve">    <tspan fill="#fe8019">public</tspan> Dictionary&lt;<tspan fill="#fabd2f">string</tspan>, (Action&lt;IDatabaseModel?&gt;, <tspan fill="#fabd2f">bool</tspan>)&gt; ViewButtons() {
</text><text x="60.00px" y="227.20px" xml:space="preserve">        <tspan fill="#fe8019">return</tspan> <tspan fill="#fe8019">new</tspan>() {
</text><text x="60.00px" y="241.60px" xml:space="preserve">            { <tspan fill="#b8bb26">&quot;Order Stock&quot;</tspan>, (s =&gt; {
</text><text x="60.00px" y="256.00px" xml:space="preserve">                <tspan fill="#928374" font-style="italic">//if(s is null) return;</tspan>
</text><text x="60.00px" y="270.40px" xml:space="preserve">
</text><text x="60.00px" y="284.80px" xml:space="preserve">                ShowGCFR(<tspan fill="#fe8019">typeof</tspan>(FormCreate), <tspan fill="#fe8019">typeof</tspan>(StockReorder));
</text><text x="60.00px" y="299.20px" xml:space="preserve">                <tspan fill="#fabd2f">var</tspan> form = Master!.CurrentlyDisplayedForm <tspan fill="#fe8019">as</tspan> FormCreate;
</text><text x="60.00px" y="313.60px" xml:space="preserve">            }, <tspan fill="#fe8019">false</tspan>) },
</text><text x="60.00px" y="328.00px" xml:space="preserve">            { <tspan fill="#b8bb26">&quot;Return Stock&quot;</tspan>, (s =&gt; {
</text><text x="60.00px" y="342.40px" xml:space="preserve">                <tspan fill="#fe8019">if</tspan>(s <tspan fill="#fe8019">is</tspan> <tspan fill="#fe8019">null</tspan>) <tspan fill="#fe8019">return</tspan>;
</text><text x="60.00px" y="356.80px" xml:space="preserve">            }, <tspan fill="#fe8019">true</tspan> )},
</text><text x="60.00px" y="371.20px" xml:space="preserve">            { <tspan fill="#b8bb26">&quot;Take Stock&quot;</tspan>, (s =&gt; {
</text><text x="60.00px" y="385.60px" xml:space="preserve">                <tspan fill="#fe8019">if</tspan>(s <tspan fill="#fe8019">is</tspan> <tspan fill="#fe8019">null</tspan>) <tspan fill="#fe8019">return</tspan>;
</text><text x="60.00px" y="400.00px" xml:space="preserve">            },<tspan fill="#fe8019">true</tspan> )},
</text><text x="60.00px" y="414.40px" xml:space="preserve">            { <tspan fill="#b8bb26">&quot;New Stock&quot;</tspan>, (_ =&gt; {
</text><text x="60.00px" y="428.80px" xml:space="preserve">                    ShowGCFR(<tspan fill="#fe8019">typeof</tspan>(FormCreate), <tspan fill="#fe8019">typeof</tspan>(Stock));
</text><text x="60.00px" y="443.20px" xml:space="preserve">                    <tspan fill="#928374" font-style="italic">//var form = Master!.CurrentlyDisplayedForm as FormCreate;</tspan>
</text><text x="60.00px" y="457.60px" xml:space="preserve">                    <tspan fill="#928374" font-style="italic">//var form_meth = form!.GetType().GetMethod(nameof(form.Populate))!.MakeGenericMethod(typeof(Clean)!);</tspan>
</text><text x="60.00px" y="472.00px" xml:space="preserve">            }, <tspan fill="#fe8019">false</tspan> )}
</text><text x="60.00px" y="486.40px" xml:space="preserve">        };
</text><text x="60.00px" y="500.80px" xml:space="preserve">    }
</text><text x="60.00px" y="515.20px" xml:space="preserve">    <tspan fill="#fe8019">public</tspan> Dictionary&lt;<tspan fill="#fabd2f">string</tspan>, (Action&lt;(List&lt;(<tspan fill="#fabd2f">string</tspan>, Func&lt;<tspan fill="#fabd2f">string</tspan>&gt;)&gt;, IDatabaseModel?)&gt;, <tspan fill="#fabd2f">bool</tspan>)&gt; CreateButtons() {
</text><text x="60.00px" y="529.60px" xml:space="preserve">        <tspan fill="#fe8019">return</tspan> <tspan fill="#fe8019">new</tspan>() {
</text><text x="60.00px" y="544.00px" xml:space="preserve">            { <tspan fill="#b8bb26">&quot;Create&quot;</tspan>, (list =&gt; {
</text><text x="60.00px" y="558.40px" xml:space="preserve">                ShowGCFR(<tspan fill="#fe8019">typeof</tspan>(FormCreate), <tspan fill="#fe8019">typeof</tspan>(Stock));
</text><text x="60.00px" y="572.80px" xml:space="preserve">                <tspan fill="#fabd2f">var</tspan> stock = <tspan fill="#fe8019">new</tspan> Stock();
</text><text x="60.00px" y="587.20px" xml:space="preserve">                <tspan fill="#fabd2f">var</tspan> stocks = DAL.Query&lt;Stock&gt;();
</text><text x="60.00px" y="601.60px" xml:space="preserve">
</text><text x="60.00px" y="616.00px" xml:space="preserve">                <tspan fill="#fe8019">if</tspan>(!stocks.Any())
</text><text x="60.00px" y="630.40px" xml:space="preserve">                    stock.Id = <tspan fill="#d3869b">0</tspan>;
</text><text x="60.00px" y="644.80px" xml:space="preserve">                <tspan fill="#fe8019">else</tspan> stock.Id = stocks.Select(x =&gt; x.Id).Max() + <tspan fill="#d3869b">1</tspan>;
</text><text x="60.00px" y="659.20px" xml:space="preserve">
</text><text x="60.00px" y="673.60px" xml:space="preserve">                <tspan fill="#fe8019">foreach</tspan>(<tspan fill="#fabd2f">var</tspan> (prop_name, prop_val) <tspan fill="#fe8019">in</tspan> list.Item1) {
</text><text x="60.00px" y="688.00px" xml:space="preserve">                    <tspan fill="#fabd2f">var</tspan> prop = <tspan fill="#fe8019">typeof</tspan>(Stock).GetProperty(prop_name);
</text><text x="60.00px" y="702.40px" xml:space="preserve">                    <tspan fill="#fe8019">if</tspan>(prop <tspan fill="#fe8019">is</tspan> <tspan fill="#fe8019">null</tspan>) <tspan fill="#fe8019">continue</tspan>;
</text><text x="60.00px" y="716.80px" xml:space="preserve">
</text><text x="60.00px" y="731.20px" xml:space="preserve">                    <tspan fill="#fe8019">if</tspan>(prop.PropertyType == <tspan fill="#fe8019">typeof</tspan>(<tspan fill="#fabd2f">string</tspan>))
</text><text x="60.00px" y="745.60px" xml:space="preserve">                        prop.SetValue(stock, prop_val(), []);
</text><text x="60.00px" y="760.00px" xml:space="preserve">                    <tspan fill="#fe8019">else</tspan> <tspan fill="#fe8019">if</tspan>(prop.PropertyType == <tspan fill="#fe8019">typeof</tspan>(<tspan fill="#fabd2f">bool</tspan>))
</text><text x="60.00px" y="774.40px" xml:space="preserve">                        prop.SetValue(stock, Convert.ToBoolean(prop_val()),[]);
</text><text x="60.00px" y="788.80px" xml:space="preserve">                    <tspan fill="#fe8019">else</tspan> <tspan fill="#fe8019">if</tspan>(prop.PropertyType == <tspan fill="#fe8019">typeof</tspan>(<tspan fill="#fabd2f">int</tspan>))
</text><text x="60.00px" y="803.20px" xml:space="preserve">                        prop.SetValue(stock, Convert.ToInt32(prop_val()),[]);
</text><text x="60.00px" y="817.60px" xml:space="preserve">                    <tspan fill="#fe8019">else</tspan> <tspan fill="#fe8019">if</tspan>(prop.PropertyType == <tspan fill="#fe8019">typeof</tspan>(<tspan fill="#fabd2f">double</tspan>))
</text><text x="60.00px" y="832.00px" xml:space="preserve">                        prop.SetValue(stock, Convert.ToDouble(prop_val()),[]);
</text><text x="60.00px" y="846.40px" xml:space="preserve">                }
</text><text x="60.00px" y="860.80px" xml:space="preserve">
</text><text x="60.00px" y="875.20px" xml:space="preserve">                stock.Create();
</text><text x="60.00px" y="889.60px" xml:space="preserve">                ShowGCFR(<tspan fill="#fe8019">typeof</tspan>(FormViewModel), <tspan fill="#fe8019">typeof</tspan>(Stock));
</text><text x="60.00px" y="904.00px" xml:space="preserve">            }, <tspan fill="#fe8019">true</tspan>) },
</text><text x="60.00px" y="918.40px" xml:space="preserve">        };
</text><text x="60.00px" y="932.80px" xml:space="preserve">    }
</text><text x="60.00px" y="947.20px" xml:space="preserve">
</text><text x="60.00px" y="961.60px" xml:space="preserve">    <tspan fill="#fe8019">public</tspan> IDatabaseModel? CreateFromList(List&lt;(<tspan fill="#fabd2f">string</tspan>, Func&lt;<tspan fill="#fabd2f">string</tspan>&gt;)&gt; list, IDatabaseModel? model) {
</text><text x="60.00px" y="976.00px" xml:space="preserve">        <tspan fill="#fe8019">return</tspan> <tspan fill="#fe8019">default</tspan>;
</text><text x="60.00px" y="990.40px" xml:space="preserve">    }
</text><text x="60.00px" y="1004.80px" xml:space="preserve">}
</text>
</g>
</svg>
